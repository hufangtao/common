// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acc.proto

#ifndef PROTOBUF_INCLUDED_acc_2eproto
#define PROTOBUF_INCLUDED_acc_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_acc_2eproto 

namespace protobuf_acc_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_acc_2eproto
namespace section {
class login_c2s;
class login_c2sDefaultTypeInternal;
extern login_c2sDefaultTypeInternal _login_c2s_default_instance_;
class login_s2c;
class login_s2cDefaultTypeInternal;
extern login_s2cDefaultTypeInternal _login_s2c_default_instance_;
}  // namespace section
namespace google {
namespace protobuf {
template<> ::section::login_c2s* Arena::CreateMaybeMessage<::section::login_c2s>(Arena*);
template<> ::section::login_s2c* Arena::CreateMaybeMessage<::section::login_s2c>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace section {

// ===================================================================

class login_c2s : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:section.login_c2s) */ {
 public:
  login_c2s();
  virtual ~login_c2s();

  login_c2s(const login_c2s& from);

  inline login_c2s& operator=(const login_c2s& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  login_c2s(login_c2s&& from) noexcept
    : login_c2s() {
    *this = ::std::move(from);
  }

  inline login_c2s& operator=(login_c2s&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const login_c2s& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const login_c2s* internal_default_instance() {
    return reinterpret_cast<const login_c2s*>(
               &_login_c2s_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(login_c2s* other);
  friend void swap(login_c2s& a, login_c2s& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline login_c2s* New() const final {
    return CreateMaybeMessage<login_c2s>(NULL);
  }

  login_c2s* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<login_c2s>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const login_c2s& from);
  void MergeFrom(const login_c2s& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(login_c2s* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string platform = 1;
  void clear_platform();
  static const int kPlatformFieldNumber = 1;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // string game_account_id = 2;
  void clear_game_account_id();
  static const int kGameAccountIdFieldNumber = 2;
  const ::std::string& game_account_id() const;
  void set_game_account_id(const ::std::string& value);
  #if LANG_CXX11
  void set_game_account_id(::std::string&& value);
  #endif
  void set_game_account_id(const char* value);
  void set_game_account_id(const char* value, size_t size);
  ::std::string* mutable_game_account_id();
  ::std::string* release_game_account_id();
  void set_allocated_game_account_id(::std::string* game_account_id);

  // string game_account_sign = 3;
  void clear_game_account_sign();
  static const int kGameAccountSignFieldNumber = 3;
  const ::std::string& game_account_sign() const;
  void set_game_account_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_game_account_sign(::std::string&& value);
  #endif
  void set_game_account_sign(const char* value);
  void set_game_account_sign(const char* value, size_t size);
  ::std::string* mutable_game_account_sign();
  ::std::string* release_game_account_sign();
  void set_allocated_game_account_sign(::std::string* game_account_sign);

  // string channel_open_id = 4;
  void clear_channel_open_id();
  static const int kChannelOpenIdFieldNumber = 4;
  const ::std::string& channel_open_id() const;
  void set_channel_open_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_open_id(::std::string&& value);
  #endif
  void set_channel_open_id(const char* value);
  void set_channel_open_id(const char* value, size_t size);
  ::std::string* mutable_channel_open_id();
  ::std::string* release_channel_open_id();
  void set_allocated_channel_open_id(::std::string* channel_open_id);

  // string channel_param = 5;
  void clear_channel_param();
  static const int kChannelParamFieldNumber = 5;
  const ::std::string& channel_param() const;
  void set_channel_param(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_param(::std::string&& value);
  #endif
  void set_channel_param(const char* value);
  void set_channel_param(const char* value, size_t size);
  ::std::string* mutable_channel_param();
  ::std::string* release_channel_param();
  void set_allocated_channel_param(::std::string* channel_param);

  // @@protoc_insertion_point(class_scope:section.login_c2s)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::internal::ArenaStringPtr game_account_id_;
  ::google::protobuf::internal::ArenaStringPtr game_account_sign_;
  ::google::protobuf::internal::ArenaStringPtr channel_open_id_;
  ::google::protobuf::internal::ArenaStringPtr channel_param_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_acc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class login_s2c : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:section.login_s2c) */ {
 public:
  login_s2c();
  virtual ~login_s2c();

  login_s2c(const login_s2c& from);

  inline login_s2c& operator=(const login_s2c& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  login_s2c(login_s2c&& from) noexcept
    : login_s2c() {
    *this = ::std::move(from);
  }

  inline login_s2c& operator=(login_s2c&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const login_s2c& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const login_s2c* internal_default_instance() {
    return reinterpret_cast<const login_s2c*>(
               &_login_s2c_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(login_s2c* other);
  friend void swap(login_s2c& a, login_s2c& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline login_s2c* New() const final {
    return CreateMaybeMessage<login_s2c>(NULL);
  }

  login_s2c* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<login_s2c>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const login_s2c& from);
  void MergeFrom(const login_s2c& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(login_s2c* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string channel_open_id = 3;
  void clear_channel_open_id();
  static const int kChannelOpenIdFieldNumber = 3;
  const ::std::string& channel_open_id() const;
  void set_channel_open_id(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_open_id(::std::string&& value);
  #endif
  void set_channel_open_id(const char* value);
  void set_channel_open_id(const char* value, size_t size);
  ::std::string* mutable_channel_open_id();
  ::std::string* release_channel_open_id();
  void set_allocated_channel_open_id(::std::string* channel_open_id);

  // string game_account_id = 4;
  void clear_game_account_id();
  static const int kGameAccountIdFieldNumber = 4;
  const ::std::string& game_account_id() const;
  void set_game_account_id(const ::std::string& value);
  #if LANG_CXX11
  void set_game_account_id(::std::string&& value);
  #endif
  void set_game_account_id(const char* value);
  void set_game_account_id(const char* value, size_t size);
  ::std::string* mutable_game_account_id();
  ::std::string* release_game_account_id();
  void set_allocated_game_account_id(::std::string* game_account_id);

  // string game_account_sign = 5;
  void clear_game_account_sign();
  static const int kGameAccountSignFieldNumber = 5;
  const ::std::string& game_account_sign() const;
  void set_game_account_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_game_account_sign(::std::string&& value);
  #endif
  void set_game_account_sign(const char* value);
  void set_game_account_sign(const char* value, size_t size);
  ::std::string* mutable_game_account_sign();
  ::std::string* release_game_account_sign();
  void set_allocated_game_account_sign(::std::string* game_account_sign);

  // string game_login_key = 6;
  void clear_game_login_key();
  static const int kGameLoginKeyFieldNumber = 6;
  const ::std::string& game_login_key() const;
  void set_game_login_key(const ::std::string& value);
  #if LANG_CXX11
  void set_game_login_key(::std::string&& value);
  #endif
  void set_game_login_key(const char* value);
  void set_game_login_key(const char* value, size_t size);
  ::std::string* mutable_game_login_key();
  ::std::string* release_game_login_key();
  void set_allocated_game_login_key(::std::string* game_login_key);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:section.login_s2c)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr channel_open_id_;
  ::google::protobuf::internal::ArenaStringPtr game_account_id_;
  ::google::protobuf::internal::ArenaStringPtr game_account_sign_;
  ::google::protobuf::internal::ArenaStringPtr game_login_key_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_acc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// login_c2s

// string platform = 1;
inline void login_c2s::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_c2s::platform() const {
  // @@protoc_insertion_point(field_get:section.login_c2s.platform)
  return platform_.GetNoArena();
}
inline void login_c2s::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_c2s.platform)
}
#if LANG_CXX11
inline void login_c2s::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_c2s.platform)
}
#endif
inline void login_c2s::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_c2s.platform)
}
inline void login_c2s::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_c2s.platform)
}
inline ::std::string* login_c2s::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:section.login_c2s.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_c2s::release_platform() {
  // @@protoc_insertion_point(field_release:section.login_c2s.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_c2s::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:section.login_c2s.platform)
}

// string game_account_id = 2;
inline void login_c2s::clear_game_account_id() {
  game_account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_c2s::game_account_id() const {
  // @@protoc_insertion_point(field_get:section.login_c2s.game_account_id)
  return game_account_id_.GetNoArena();
}
inline void login_c2s::set_game_account_id(const ::std::string& value) {
  
  game_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_c2s.game_account_id)
}
#if LANG_CXX11
inline void login_c2s::set_game_account_id(::std::string&& value) {
  
  game_account_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_c2s.game_account_id)
}
#endif
inline void login_c2s::set_game_account_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_c2s.game_account_id)
}
inline void login_c2s::set_game_account_id(const char* value, size_t size) {
  
  game_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_c2s.game_account_id)
}
inline ::std::string* login_c2s::mutable_game_account_id() {
  
  // @@protoc_insertion_point(field_mutable:section.login_c2s.game_account_id)
  return game_account_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_c2s::release_game_account_id() {
  // @@protoc_insertion_point(field_release:section.login_c2s.game_account_id)
  
  return game_account_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_c2s::set_allocated_game_account_id(::std::string* game_account_id) {
  if (game_account_id != NULL) {
    
  } else {
    
  }
  game_account_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_account_id);
  // @@protoc_insertion_point(field_set_allocated:section.login_c2s.game_account_id)
}

// string game_account_sign = 3;
inline void login_c2s::clear_game_account_sign() {
  game_account_sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_c2s::game_account_sign() const {
  // @@protoc_insertion_point(field_get:section.login_c2s.game_account_sign)
  return game_account_sign_.GetNoArena();
}
inline void login_c2s::set_game_account_sign(const ::std::string& value) {
  
  game_account_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_c2s.game_account_sign)
}
#if LANG_CXX11
inline void login_c2s::set_game_account_sign(::std::string&& value) {
  
  game_account_sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_c2s.game_account_sign)
}
#endif
inline void login_c2s::set_game_account_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_account_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_c2s.game_account_sign)
}
inline void login_c2s::set_game_account_sign(const char* value, size_t size) {
  
  game_account_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_c2s.game_account_sign)
}
inline ::std::string* login_c2s::mutable_game_account_sign() {
  
  // @@protoc_insertion_point(field_mutable:section.login_c2s.game_account_sign)
  return game_account_sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_c2s::release_game_account_sign() {
  // @@protoc_insertion_point(field_release:section.login_c2s.game_account_sign)
  
  return game_account_sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_c2s::set_allocated_game_account_sign(::std::string* game_account_sign) {
  if (game_account_sign != NULL) {
    
  } else {
    
  }
  game_account_sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_account_sign);
  // @@protoc_insertion_point(field_set_allocated:section.login_c2s.game_account_sign)
}

// string channel_open_id = 4;
inline void login_c2s::clear_channel_open_id() {
  channel_open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_c2s::channel_open_id() const {
  // @@protoc_insertion_point(field_get:section.login_c2s.channel_open_id)
  return channel_open_id_.GetNoArena();
}
inline void login_c2s::set_channel_open_id(const ::std::string& value) {
  
  channel_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_c2s.channel_open_id)
}
#if LANG_CXX11
inline void login_c2s::set_channel_open_id(::std::string&& value) {
  
  channel_open_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_c2s.channel_open_id)
}
#endif
inline void login_c2s::set_channel_open_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_c2s.channel_open_id)
}
inline void login_c2s::set_channel_open_id(const char* value, size_t size) {
  
  channel_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_c2s.channel_open_id)
}
inline ::std::string* login_c2s::mutable_channel_open_id() {
  
  // @@protoc_insertion_point(field_mutable:section.login_c2s.channel_open_id)
  return channel_open_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_c2s::release_channel_open_id() {
  // @@protoc_insertion_point(field_release:section.login_c2s.channel_open_id)
  
  return channel_open_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_c2s::set_allocated_channel_open_id(::std::string* channel_open_id) {
  if (channel_open_id != NULL) {
    
  } else {
    
  }
  channel_open_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_open_id);
  // @@protoc_insertion_point(field_set_allocated:section.login_c2s.channel_open_id)
}

// string channel_param = 5;
inline void login_c2s::clear_channel_param() {
  channel_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_c2s::channel_param() const {
  // @@protoc_insertion_point(field_get:section.login_c2s.channel_param)
  return channel_param_.GetNoArena();
}
inline void login_c2s::set_channel_param(const ::std::string& value) {
  
  channel_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_c2s.channel_param)
}
#if LANG_CXX11
inline void login_c2s::set_channel_param(::std::string&& value) {
  
  channel_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_c2s.channel_param)
}
#endif
inline void login_c2s::set_channel_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_c2s.channel_param)
}
inline void login_c2s::set_channel_param(const char* value, size_t size) {
  
  channel_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_c2s.channel_param)
}
inline ::std::string* login_c2s::mutable_channel_param() {
  
  // @@protoc_insertion_point(field_mutable:section.login_c2s.channel_param)
  return channel_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_c2s::release_channel_param() {
  // @@protoc_insertion_point(field_release:section.login_c2s.channel_param)
  
  return channel_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_c2s::set_allocated_channel_param(::std::string* channel_param) {
  if (channel_param != NULL) {
    
  } else {
    
  }
  channel_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_param);
  // @@protoc_insertion_point(field_set_allocated:section.login_c2s.channel_param)
}

// -------------------------------------------------------------------

// login_s2c

// int32 code = 1;
inline void login_s2c::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 login_s2c::code() const {
  // @@protoc_insertion_point(field_get:section.login_s2c.code)
  return code_;
}
inline void login_s2c::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:section.login_s2c.code)
}

// int32 id = 2;
inline void login_s2c::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 login_s2c::id() const {
  // @@protoc_insertion_point(field_get:section.login_s2c.id)
  return id_;
}
inline void login_s2c::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:section.login_s2c.id)
}

// string channel_open_id = 3;
inline void login_s2c::clear_channel_open_id() {
  channel_open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_s2c::channel_open_id() const {
  // @@protoc_insertion_point(field_get:section.login_s2c.channel_open_id)
  return channel_open_id_.GetNoArena();
}
inline void login_s2c::set_channel_open_id(const ::std::string& value) {
  
  channel_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_s2c.channel_open_id)
}
#if LANG_CXX11
inline void login_s2c::set_channel_open_id(::std::string&& value) {
  
  channel_open_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_s2c.channel_open_id)
}
#endif
inline void login_s2c::set_channel_open_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_s2c.channel_open_id)
}
inline void login_s2c::set_channel_open_id(const char* value, size_t size) {
  
  channel_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_s2c.channel_open_id)
}
inline ::std::string* login_s2c::mutable_channel_open_id() {
  
  // @@protoc_insertion_point(field_mutable:section.login_s2c.channel_open_id)
  return channel_open_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_s2c::release_channel_open_id() {
  // @@protoc_insertion_point(field_release:section.login_s2c.channel_open_id)
  
  return channel_open_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_s2c::set_allocated_channel_open_id(::std::string* channel_open_id) {
  if (channel_open_id != NULL) {
    
  } else {
    
  }
  channel_open_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_open_id);
  // @@protoc_insertion_point(field_set_allocated:section.login_s2c.channel_open_id)
}

// string game_account_id = 4;
inline void login_s2c::clear_game_account_id() {
  game_account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_s2c::game_account_id() const {
  // @@protoc_insertion_point(field_get:section.login_s2c.game_account_id)
  return game_account_id_.GetNoArena();
}
inline void login_s2c::set_game_account_id(const ::std::string& value) {
  
  game_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_s2c.game_account_id)
}
#if LANG_CXX11
inline void login_s2c::set_game_account_id(::std::string&& value) {
  
  game_account_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_s2c.game_account_id)
}
#endif
inline void login_s2c::set_game_account_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_s2c.game_account_id)
}
inline void login_s2c::set_game_account_id(const char* value, size_t size) {
  
  game_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_s2c.game_account_id)
}
inline ::std::string* login_s2c::mutable_game_account_id() {
  
  // @@protoc_insertion_point(field_mutable:section.login_s2c.game_account_id)
  return game_account_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_s2c::release_game_account_id() {
  // @@protoc_insertion_point(field_release:section.login_s2c.game_account_id)
  
  return game_account_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_s2c::set_allocated_game_account_id(::std::string* game_account_id) {
  if (game_account_id != NULL) {
    
  } else {
    
  }
  game_account_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_account_id);
  // @@protoc_insertion_point(field_set_allocated:section.login_s2c.game_account_id)
}

// string game_account_sign = 5;
inline void login_s2c::clear_game_account_sign() {
  game_account_sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_s2c::game_account_sign() const {
  // @@protoc_insertion_point(field_get:section.login_s2c.game_account_sign)
  return game_account_sign_.GetNoArena();
}
inline void login_s2c::set_game_account_sign(const ::std::string& value) {
  
  game_account_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_s2c.game_account_sign)
}
#if LANG_CXX11
inline void login_s2c::set_game_account_sign(::std::string&& value) {
  
  game_account_sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_s2c.game_account_sign)
}
#endif
inline void login_s2c::set_game_account_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_account_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_s2c.game_account_sign)
}
inline void login_s2c::set_game_account_sign(const char* value, size_t size) {
  
  game_account_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_s2c.game_account_sign)
}
inline ::std::string* login_s2c::mutable_game_account_sign() {
  
  // @@protoc_insertion_point(field_mutable:section.login_s2c.game_account_sign)
  return game_account_sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_s2c::release_game_account_sign() {
  // @@protoc_insertion_point(field_release:section.login_s2c.game_account_sign)
  
  return game_account_sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_s2c::set_allocated_game_account_sign(::std::string* game_account_sign) {
  if (game_account_sign != NULL) {
    
  } else {
    
  }
  game_account_sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_account_sign);
  // @@protoc_insertion_point(field_set_allocated:section.login_s2c.game_account_sign)
}

// string game_login_key = 6;
inline void login_s2c::clear_game_login_key() {
  game_login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& login_s2c::game_login_key() const {
  // @@protoc_insertion_point(field_get:section.login_s2c.game_login_key)
  return game_login_key_.GetNoArena();
}
inline void login_s2c::set_game_login_key(const ::std::string& value) {
  
  game_login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:section.login_s2c.game_login_key)
}
#if LANG_CXX11
inline void login_s2c::set_game_login_key(::std::string&& value) {
  
  game_login_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:section.login_s2c.game_login_key)
}
#endif
inline void login_s2c::set_game_login_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:section.login_s2c.game_login_key)
}
inline void login_s2c::set_game_login_key(const char* value, size_t size) {
  
  game_login_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:section.login_s2c.game_login_key)
}
inline ::std::string* login_s2c::mutable_game_login_key() {
  
  // @@protoc_insertion_point(field_mutable:section.login_s2c.game_login_key)
  return game_login_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* login_s2c::release_game_login_key() {
  // @@protoc_insertion_point(field_release:section.login_s2c.game_login_key)
  
  return game_login_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void login_s2c::set_allocated_game_login_key(::std::string* game_login_key) {
  if (game_login_key != NULL) {
    
  } else {
    
  }
  game_login_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_login_key);
  // @@protoc_insertion_point(field_set_allocated:section.login_s2c.game_login_key)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace section

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_acc_2eproto
