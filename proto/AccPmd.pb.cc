// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AccPmd.proto

#include "AccPmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace PlatPmd {
class AccPmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccPmd>
      _instance;
} _AccPmd_default_instance_;
class LoginPmd_C2SDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginPmd_C2S>
      _instance;
} _LoginPmd_C2S_default_instance_;
class LoginPmd_S2CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginPmd_S2C>
      _instance;
} _LoginPmd_S2C_default_instance_;
}  // namespace PlatPmd
namespace protobuf_AccPmd_2eproto {
static void InitDefaultsAccPmd() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PlatPmd::_AccPmd_default_instance_;
    new (ptr) ::PlatPmd::AccPmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlatPmd::AccPmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccPmd =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccPmd}, {}};

static void InitDefaultsLoginPmd_C2S() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PlatPmd::_LoginPmd_C2S_default_instance_;
    new (ptr) ::PlatPmd::LoginPmd_C2S();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlatPmd::LoginPmd_C2S::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginPmd_C2S =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginPmd_C2S}, {}};

static void InitDefaultsLoginPmd_S2C() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PlatPmd::_LoginPmd_S2C_default_instance_;
    new (ptr) ::PlatPmd::LoginPmd_S2C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlatPmd::LoginPmd_S2C::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginPmd_S2C =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginPmd_S2C}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AccPmd.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginPmd_C2S.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginPmd_S2C.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::AccPmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_C2S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_C2S, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_C2S, game_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_C2S, game_account_sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_C2S, channel_open_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_C2S, channel_param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_S2C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_S2C, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_S2C, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_S2C, channel_open_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_S2C, game_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_S2C, game_account_sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatPmd::LoginPmd_S2C, game_login_key_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PlatPmd::AccPmd)},
  { 5, -1, sizeof(::PlatPmd::LoginPmd_C2S)},
  { 15, -1, sizeof(::PlatPmd::LoginPmd_S2C)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::PlatPmd::_AccPmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PlatPmd::_LoginPmd_C2S_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::PlatPmd::_LoginPmd_S2C_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "AccPmd.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014AccPmd.proto\022\007PlatPmd\";\n\006AccPmd\"1\n\005Par"
      "am\022\023\n\017LoginAccPmd_C2S\020\000\022\023\n\017LoginAccPmd_S"
      "2C\020\001\"\204\001\n\014LoginPmd_C2S\022\020\n\010platform\030\001 \001(\t\022"
      "\027\n\017game_account_id\030\002 \001(\t\022\031\n\021game_account"
      "_sign\030\003 \001(\t\022\027\n\017channel_open_id\030\004 \001(\t\022\025\n\r"
      "channel_param\030\005 \001(\t\"\215\001\n\014LoginPmd_S2C\022\014\n\004"
      "code\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022\027\n\017channel_open_i"
      "d\030\003 \001(\t\022\027\n\017game_account_id\030\004 \001(\t\022\031\n\021game"
      "_account_sign\030\005 \001(\t\022\026\n\016game_login_key\030\006 "
      "\001(\t*N\n\005Error\022\013\n\007LoginOk\020\000\022\022\n\016TokenFindEr"
      "ror\020\001\022\022\n\016TokenDiffError\020\002\022\020\n\014VersionErro"
      "r\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 451);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AccPmd.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AccPmd_2eproto
namespace PlatPmd {
const ::google::protobuf::EnumDescriptor* AccPmd_Param_descriptor() {
  protobuf_AccPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AccPmd_2eproto::file_level_enum_descriptors[0];
}
bool AccPmd_Param_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AccPmd_Param AccPmd::LoginAccPmd_C2S;
const AccPmd_Param AccPmd::LoginAccPmd_S2C;
const AccPmd_Param AccPmd::Param_MIN;
const AccPmd_Param AccPmd::Param_MAX;
const int AccPmd::Param_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Error_descriptor() {
  protobuf_AccPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AccPmd_2eproto::file_level_enum_descriptors[1];
}
bool Error_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AccPmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccPmd::AccPmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AccPmd_2eproto::scc_info_AccPmd.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlatPmd.AccPmd)
}
AccPmd::AccPmd(const AccPmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PlatPmd.AccPmd)
}

void AccPmd::SharedCtor() {
}

AccPmd::~AccPmd() {
  // @@protoc_insertion_point(destructor:PlatPmd.AccPmd)
  SharedDtor();
}

void AccPmd::SharedDtor() {
}

void AccPmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccPmd::descriptor() {
  ::protobuf_AccPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccPmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccPmd& AccPmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AccPmd_2eproto::scc_info_AccPmd.base);
  return *internal_default_instance();
}


void AccPmd::Clear() {
// @@protoc_insertion_point(message_clear_start:PlatPmd.AccPmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool AccPmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlatPmd.AccPmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:PlatPmd.AccPmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlatPmd.AccPmd)
  return false;
#undef DO_
}

void AccPmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlatPmd.AccPmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlatPmd.AccPmd)
}

::google::protobuf::uint8* AccPmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlatPmd.AccPmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlatPmd.AccPmd)
  return target;
}

size_t AccPmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlatPmd.AccPmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccPmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlatPmd.AccPmd)
  GOOGLE_DCHECK_NE(&from, this);
  const AccPmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccPmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlatPmd.AccPmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlatPmd.AccPmd)
    MergeFrom(*source);
  }
}

void AccPmd::MergeFrom(const AccPmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlatPmd.AccPmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AccPmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlatPmd.AccPmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccPmd::CopyFrom(const AccPmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlatPmd.AccPmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccPmd::IsInitialized() const {
  return true;
}

void AccPmd::Swap(AccPmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccPmd::InternalSwap(AccPmd* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccPmd::GetMetadata() const {
  protobuf_AccPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccPmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginPmd_C2S::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginPmd_C2S::kPlatformFieldNumber;
const int LoginPmd_C2S::kGameAccountIdFieldNumber;
const int LoginPmd_C2S::kGameAccountSignFieldNumber;
const int LoginPmd_C2S::kChannelOpenIdFieldNumber;
const int LoginPmd_C2S::kChannelParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginPmd_C2S::LoginPmd_C2S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AccPmd_2eproto::scc_info_LoginPmd_C2S.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlatPmd.LoginPmd_C2S)
}
LoginPmd_C2S::LoginPmd_C2S(const LoginPmd_C2S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform().size() > 0) {
    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  game_account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.game_account_id().size() > 0) {
    game_account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_account_id_);
  }
  game_account_sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.game_account_sign().size() > 0) {
    game_account_sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_account_sign_);
  }
  channel_open_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_open_id().size() > 0) {
    channel_open_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_open_id_);
  }
  channel_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_param().size() > 0) {
    channel_param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_param_);
  }
  // @@protoc_insertion_point(copy_constructor:PlatPmd.LoginPmd_C2S)
}

void LoginPmd_C2S::SharedCtor() {
  platform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_open_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginPmd_C2S::~LoginPmd_C2S() {
  // @@protoc_insertion_point(destructor:PlatPmd.LoginPmd_C2S)
  SharedDtor();
}

void LoginPmd_C2S::SharedDtor() {
  platform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_open_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginPmd_C2S::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginPmd_C2S::descriptor() {
  ::protobuf_AccPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccPmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginPmd_C2S& LoginPmd_C2S::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AccPmd_2eproto::scc_info_LoginPmd_C2S.base);
  return *internal_default_instance();
}


void LoginPmd_C2S::Clear() {
// @@protoc_insertion_point(message_clear_start:PlatPmd.LoginPmd_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginPmd_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlatPmd.LoginPmd_C2S)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string platform = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform().data(), static_cast<int>(this->platform().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_C2S.platform"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string game_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->game_account_id().data(), static_cast<int>(this->game_account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_C2S.game_account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string game_account_sign = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_account_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->game_account_sign().data(), static_cast<int>(this->game_account_sign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_C2S.game_account_sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string channel_open_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_open_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_open_id().data(), static_cast<int>(this->channel_open_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_C2S.channel_open_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string channel_param = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_param().data(), static_cast<int>(this->channel_param().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_C2S.channel_param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlatPmd.LoginPmd_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlatPmd.LoginPmd_C2S)
  return false;
#undef DO_
}

void LoginPmd_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlatPmd.LoginPmd_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string platform = 1;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.platform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->platform(), output);
  }

  // string game_account_id = 2;
  if (this->game_account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_account_id().data(), static_cast<int>(this->game_account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.game_account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->game_account_id(), output);
  }

  // string game_account_sign = 3;
  if (this->game_account_sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_account_sign().data(), static_cast<int>(this->game_account_sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.game_account_sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->game_account_sign(), output);
  }

  // string channel_open_id = 4;
  if (this->channel_open_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_open_id().data(), static_cast<int>(this->channel_open_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.channel_open_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->channel_open_id(), output);
  }

  // string channel_param = 5;
  if (this->channel_param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_param().data(), static_cast<int>(this->channel_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.channel_param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->channel_param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlatPmd.LoginPmd_C2S)
}

::google::protobuf::uint8* LoginPmd_C2S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlatPmd.LoginPmd_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string platform = 1;
  if (this->platform().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform().data(), static_cast<int>(this->platform().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.platform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->platform(), target);
  }

  // string game_account_id = 2;
  if (this->game_account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_account_id().data(), static_cast<int>(this->game_account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.game_account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->game_account_id(), target);
  }

  // string game_account_sign = 3;
  if (this->game_account_sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_account_sign().data(), static_cast<int>(this->game_account_sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.game_account_sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->game_account_sign(), target);
  }

  // string channel_open_id = 4;
  if (this->channel_open_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_open_id().data(), static_cast<int>(this->channel_open_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.channel_open_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->channel_open_id(), target);
  }

  // string channel_param = 5;
  if (this->channel_param().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_param().data(), static_cast<int>(this->channel_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_C2S.channel_param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->channel_param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlatPmd.LoginPmd_C2S)
  return target;
}

size_t LoginPmd_C2S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlatPmd.LoginPmd_C2S)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string platform = 1;
  if (this->platform().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform());
  }

  // string game_account_id = 2;
  if (this->game_account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->game_account_id());
  }

  // string game_account_sign = 3;
  if (this->game_account_sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->game_account_sign());
  }

  // string channel_open_id = 4;
  if (this->channel_open_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_open_id());
  }

  // string channel_param = 5;
  if (this->channel_param().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginPmd_C2S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlatPmd.LoginPmd_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginPmd_C2S* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginPmd_C2S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlatPmd.LoginPmd_C2S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlatPmd.LoginPmd_C2S)
    MergeFrom(*source);
  }
}

void LoginPmd_C2S::MergeFrom(const LoginPmd_C2S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlatPmd.LoginPmd_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.platform().size() > 0) {

    platform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_);
  }
  if (from.game_account_id().size() > 0) {

    game_account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_account_id_);
  }
  if (from.game_account_sign().size() > 0) {

    game_account_sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_account_sign_);
  }
  if (from.channel_open_id().size() > 0) {

    channel_open_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_open_id_);
  }
  if (from.channel_param().size() > 0) {

    channel_param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_param_);
  }
}

void LoginPmd_C2S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlatPmd.LoginPmd_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginPmd_C2S::CopyFrom(const LoginPmd_C2S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlatPmd.LoginPmd_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginPmd_C2S::IsInitialized() const {
  return true;
}

void LoginPmd_C2S::Swap(LoginPmd_C2S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginPmd_C2S::InternalSwap(LoginPmd_C2S* other) {
  using std::swap;
  platform_.Swap(&other->platform_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_account_id_.Swap(&other->game_account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_account_sign_.Swap(&other->game_account_sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_open_id_.Swap(&other->channel_open_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_param_.Swap(&other->channel_param_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginPmd_C2S::GetMetadata() const {
  protobuf_AccPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccPmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginPmd_S2C::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginPmd_S2C::kCodeFieldNumber;
const int LoginPmd_S2C::kIdFieldNumber;
const int LoginPmd_S2C::kChannelOpenIdFieldNumber;
const int LoginPmd_S2C::kGameAccountIdFieldNumber;
const int LoginPmd_S2C::kGameAccountSignFieldNumber;
const int LoginPmd_S2C::kGameLoginKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginPmd_S2C::LoginPmd_S2C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AccPmd_2eproto::scc_info_LoginPmd_S2C.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlatPmd.LoginPmd_S2C)
}
LoginPmd_S2C::LoginPmd_S2C(const LoginPmd_S2C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_open_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_open_id().size() > 0) {
    channel_open_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_open_id_);
  }
  game_account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.game_account_id().size() > 0) {
    game_account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_account_id_);
  }
  game_account_sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.game_account_sign().size() > 0) {
    game_account_sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_account_sign_);
  }
  game_login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.game_login_key().size() > 0) {
    game_login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_login_key_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&code_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:PlatPmd.LoginPmd_S2C)
}

void LoginPmd_S2C::SharedCtor() {
  channel_open_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_login_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&code_)) + sizeof(id_));
}

LoginPmd_S2C::~LoginPmd_S2C() {
  // @@protoc_insertion_point(destructor:PlatPmd.LoginPmd_S2C)
  SharedDtor();
}

void LoginPmd_S2C::SharedDtor() {
  channel_open_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_login_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginPmd_S2C::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginPmd_S2C::descriptor() {
  ::protobuf_AccPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccPmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginPmd_S2C& LoginPmd_S2C::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AccPmd_2eproto::scc_info_LoginPmd_S2C.base);
  return *internal_default_instance();
}


void LoginPmd_S2C::Clear() {
// @@protoc_insertion_point(message_clear_start:PlatPmd.LoginPmd_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_account_sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_login_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&code_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool LoginPmd_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlatPmd.LoginPmd_S2C)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string channel_open_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_open_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_open_id().data(), static_cast<int>(this->channel_open_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_S2C.channel_open_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string game_account_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_account_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->game_account_id().data(), static_cast<int>(this->game_account_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_S2C.game_account_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string game_account_sign = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_account_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->game_account_sign().data(), static_cast<int>(this->game_account_sign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_S2C.game_account_sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string game_login_key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_login_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->game_login_key().data(), static_cast<int>(this->game_login_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatPmd.LoginPmd_S2C.game_login_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlatPmd.LoginPmd_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlatPmd.LoginPmd_S2C)
  return false;
#undef DO_
}

void LoginPmd_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlatPmd.LoginPmd_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // string channel_open_id = 3;
  if (this->channel_open_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_open_id().data(), static_cast<int>(this->channel_open_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_S2C.channel_open_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->channel_open_id(), output);
  }

  // string game_account_id = 4;
  if (this->game_account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_account_id().data(), static_cast<int>(this->game_account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_S2C.game_account_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->game_account_id(), output);
  }

  // string game_account_sign = 5;
  if (this->game_account_sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_account_sign().data(), static_cast<int>(this->game_account_sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_S2C.game_account_sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->game_account_sign(), output);
  }

  // string game_login_key = 6;
  if (this->game_login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_login_key().data(), static_cast<int>(this->game_login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_S2C.game_login_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->game_login_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlatPmd.LoginPmd_S2C)
}

::google::protobuf::uint8* LoginPmd_S2C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlatPmd.LoginPmd_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // string channel_open_id = 3;
  if (this->channel_open_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_open_id().data(), static_cast<int>(this->channel_open_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_S2C.channel_open_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->channel_open_id(), target);
  }

  // string game_account_id = 4;
  if (this->game_account_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_account_id().data(), static_cast<int>(this->game_account_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_S2C.game_account_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->game_account_id(), target);
  }

  // string game_account_sign = 5;
  if (this->game_account_sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_account_sign().data(), static_cast<int>(this->game_account_sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_S2C.game_account_sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->game_account_sign(), target);
  }

  // string game_login_key = 6;
  if (this->game_login_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->game_login_key().data(), static_cast<int>(this->game_login_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatPmd.LoginPmd_S2C.game_login_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->game_login_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlatPmd.LoginPmd_S2C)
  return target;
}

size_t LoginPmd_S2C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlatPmd.LoginPmd_S2C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string channel_open_id = 3;
  if (this->channel_open_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_open_id());
  }

  // string game_account_id = 4;
  if (this->game_account_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->game_account_id());
  }

  // string game_account_sign = 5;
  if (this->game_account_sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->game_account_sign());
  }

  // string game_login_key = 6;
  if (this->game_login_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->game_login_key());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginPmd_S2C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlatPmd.LoginPmd_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginPmd_S2C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginPmd_S2C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlatPmd.LoginPmd_S2C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlatPmd.LoginPmd_S2C)
    MergeFrom(*source);
  }
}

void LoginPmd_S2C::MergeFrom(const LoginPmd_S2C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlatPmd.LoginPmd_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_open_id().size() > 0) {

    channel_open_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_open_id_);
  }
  if (from.game_account_id().size() > 0) {

    game_account_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_account_id_);
  }
  if (from.game_account_sign().size() > 0) {

    game_account_sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_account_sign_);
  }
  if (from.game_login_key().size() > 0) {

    game_login_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_login_key_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void LoginPmd_S2C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlatPmd.LoginPmd_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginPmd_S2C::CopyFrom(const LoginPmd_S2C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlatPmd.LoginPmd_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginPmd_S2C::IsInitialized() const {
  return true;
}

void LoginPmd_S2C::Swap(LoginPmd_S2C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginPmd_S2C::InternalSwap(LoginPmd_S2C* other) {
  using std::swap;
  channel_open_id_.Swap(&other->channel_open_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_account_id_.Swap(&other->game_account_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_account_sign_.Swap(&other->game_account_sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  game_login_key_.Swap(&other->game_login_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginPmd_S2C::GetMetadata() const {
  protobuf_AccPmd_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccPmd_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PlatPmd
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PlatPmd::AccPmd* Arena::CreateMaybeMessage< ::PlatPmd::AccPmd >(Arena* arena) {
  return Arena::CreateInternal< ::PlatPmd::AccPmd >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PlatPmd::LoginPmd_C2S* Arena::CreateMaybeMessage< ::PlatPmd::LoginPmd_C2S >(Arena* arena) {
  return Arena::CreateInternal< ::PlatPmd::LoginPmd_C2S >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PlatPmd::LoginPmd_S2C* Arena::CreateMaybeMessage< ::PlatPmd::LoginPmd_S2C >(Arena* arena) {
  return Arena::CreateInternal< ::PlatPmd::LoginPmd_S2C >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
